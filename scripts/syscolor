#!/bin/bash
# syscolor: figure out what bash prompt / screen color
# to use for this machine.
# Runs 

# syscolor: Define a Bash function to give the color in human-readable terms.
# Why function rather than a script? Keep evaluation in-process.
# Why "syscolor"? Should use for Bash, screen, and whatever else.
# Why multiple definition of the function? So that it's evaluated when the function
#  is loaded, rather than at every invocation. We can probably do better.

# Default
syscolor() { echo 'green'; }

case "$OSTYPE" in
  darwin*)
    syscolor() { echo 'purple'; }
    ;;
  linux*|*)
    STATUSCODE=$(curl \
      --silent \
      --fail \
      --write-out '%{http_code}' \
      --output /dev/null \
      --header 'Metadata-Flavor: Google' \
      --max-time '2' \
      http://metadata.google.internal/computeMetadata/v1/instance/hostname)
    if test "$STATUSCODE" -eq 200
    then
      syscolor() { echo 'blue'; }
    fi
    ;;
esac
